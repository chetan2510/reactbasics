{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Desktop/ReactWebApp/reactbasics/src/components/TodoItems.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class TodoItems extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#f4f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n\n    this.getButttonStyle = () => {\n      return {\n        background: '#ff0000',\n        color: '#fff',\n        border: 'none'\n      };\n    };\n  }\n\n  // we can add the things like this when passinf from the functions\n  // using checkbox, e is the argument we are passing from the function\n  // markComplete = (e) => {\n  //\n  // }\n  render() {\n    // this is the way how we can pull the varibles out form the props\n    const {\n      id,\n      title\n    } = this.props.todo; // printing the specific key-value pair\n\n    return (\n      /*#__PURE__*/\n      // inline styling\n      React.createElement(\"div\", {\n        style: this.getStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.props.markComplete.bind(this, id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \" \", this.props.todo.title, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        style: this.getButttonStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }))\n    );\n  }\n\n} // Validates that the object type is that only what we are expecting\n\nTodoItems.propTypes = {\n  todo: PropTypes.object.isRequired\n}; // can add styling like this also\n\nconst itemStyle = {\n  backgroundColor: '#f4f4f4'\n};\nexport default TodoItems;","map":{"version":3,"sources":["/Users/brian/Desktop/ReactWebApp/reactbasics/src/components/TodoItems.js"],"names":["React","Component","PropTypes","TodoItems","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","getButttonStyle","color","border","render","id","title","markComplete","bind","propTypes","object","isRequired","itemStyle","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAIrCG,QAJqC,GAI1B,MAAM;AACV,aAAO;AACHC,QAAAA,UAAU,EAAE,WADT;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,cAAc,EAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJ3D,OAAP;AAMN,KAXoC;;AAAA,SAarCC,eAbqC,GAanB,MAAM;AACpB,aAAO;AACHP,QAAAA,UAAU,EAAE,SADT;AAEHQ,QAAAA,KAAK,EAAE,MAFJ;AAGHC,QAAAA,MAAM,EAAE;AAHL,OAAP;AAMH,KApBoC;AAAA;;AAsBrC;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AAEL;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAiB,KAAKR,KAAL,CAAWC,IAAlC,CAHK,CAIL;;AACA;AAAA;AAEI;AACA;AAAK,QAAA,KAAK,EAAE,KAAKN,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQA;AAAO,QAAA,IAAI,EAAG,UAAd;AAAyB,QAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWS,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,KAArB,MATA,eAUA;AAAQ,QAAA,KAAK,EAAE,KAAKL,eAAL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA;AAHJ;AAgBH;;AAhDoC,C,CAoDzC;;AACAT,SAAS,CAACiB,SAAV,GAAsB;AAClBV,EAAAA,IAAI,EAAER,SAAS,CAACmB,MAAV,CAAiBC;AADL,CAAtB,C,CAIA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,eAAe,EAAE;AADH,CAAlB;AAIA,eAAerB,SAAf","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItems extends Component {\n\n    // we can do the styling like this for the specific values coming as props\n    // using this syntax so we don't have to use bind\n    getStyle = () => {\n           return {\n               background: '#f4f4f4f4',\n               padding: '10px',\n               borderBottom: '1px #ccc dotted',\n               textDecoration : this.props.todo.completed ? 'line-through' : 'none'\n           }\n    }\n\n    getButttonStyle = () => {\n        return {\n            background: '#ff0000',\n            color: '#fff',\n            border: 'none',\n\n        }\n    }\n\n    // we can add the things like this when passinf from the functions\n    // using checkbox, e is the argument we are passing from the function\n    // markComplete = (e) => {\n    //\n    // }\n    render() {\n\n        // this is the way how we can pull the varibles out form the props\n        const { id, title } =  this.props.todo;\n        // printing the specific key-value pair\n        return (\n\n            // inline styling\n            <div style={this.getStyle()}>\n\n            {/*this says that proping out the mark complete to the caller tag\n               the markComplete tag should be present in the caller tag see Todos.js\n             */}\n\n            {/* like this we can bind any values to the prop which is calling back, here we have given an id to it\n                this binding will stay forever with this method*/}\n            <input type = \"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>\n            <p> {this.props.todo.title} </p>\n            <button style={this.getButttonStyle()}></button>\n            </div>\n        )\n    }\n}\n\n\n// Validates that the object type is that only what we are expecting\nTodoItems.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\n// can add styling like this also\nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n\nexport default TodoItems"]},"metadata":{},"sourceType":"module"}