{"version":3,"sources":["components/TodoItems.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["TodoItems","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","getButttonStyle","color","border","borderRadius","cursor","float","this","id","title","style","type","onChange","markComplete","bind","onClick","deleteButtton","Component","Todos","todos","map","key","headerStyle","textAlign","linkStyle","Header","to","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","filter","Axios","post","then","res","data","get","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.834e6d3f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItems extends Component {\n\n    // we can do the styling like this for the specific values coming as props\n    // using this syntax so we don't have to use bind\n    getStyle = () => {\n           return {\n               background: '#f4f4f4f4',\n               padding: '10px',\n               borderBottom: '1px #ccc dotted',\n               textDecoration : this.props.todo.completed ? 'line-through' : 'none'\n           }\n    }\n\n    getButttonStyle = () => {\n        return {\n            background: '#ff0000',\n            color: '#fff',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '50%',\n            cursor: 'pointer',\n            float: 'right'\n\n        }\n    }\n\n    // buttonClicked = () => {\n    //     alert(\"hello\");\n    // }\n\n    // we can add the things like this when passinf from the functions\n    // using checkbox, e is the argument we are passing from the function\n    // markComplete = (e) => {\n    //\n    // }\n    render() {\n\n        // this is the way how we can pull the varibles out form the props\n        const { id, title } =  this.props.todo;\n        // printing the specific key-value pair\n        return (\n\n            // inline styling\n            <div style={this.getStyle()}>\n\n            {/*this says that proping out the mark complete to the caller tag\n               the markComplete tag should be present in the caller tag see Todos.js\n             */}\n\n            {/* like this we can bind any values to the prop which is calling back, here we have given an id to it\n                this binding will stay forever with this method*/}\n            <input type = \"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>\n                <button onClick={this.props.deleteButtton.bind(this, id)} style={this.getButttonStyle()}>X</button>\n            <p> {this.props.todo.title} </p>\n            </div>\n        )\n    }\n}\n\n\n// Validates that the object type is that only what we are expecting\nTodoItems.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\n// can add styling like this also\nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n\nexport default TodoItems","import React, {Component} from 'react';\nimport TodoItems from \"./TodoItems\";\nimport PropTypes from \"prop-types\";\n\n// created out own class\nclass Todos extends Component {\n\n    render() {\n        return this.props.todos.map((todo) => (\n\n          // AIM to pass the single key-value pair of the json\n\n          // Key is important as we are using maps so to tell about the unique thing\n          // we need to give the key\n          // markComplete is being called from TodoItems and once controller reaches here\n          // it will do what ever is written inside the {} brackerts either we can call the\n          // function in this class or we can prop is other js file\n            // here we are proping it out\n            <TodoItems key = {todo.id} todo = {todo} markComplete={this.props.markComplete} deleteButtton={this.props.deleteButtton}/>\n            )\n        );\n    }\n}\n\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    deleteButtton: PropTypes.func.isRequired\n}\n\nexport default Todos;","import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\n// normal function there is a difference between class and a normal function\nfunction Header() {\n    return <header style={headerStyle}>\n        <h1>Todo List</h1>\n        <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About us</Link>\n    </header>\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n\n}\n\nconst linkStyle = {\n    color: '#fff',\n    textDecoration: 'none'\n}\n\nexport default Header","import React, {Component} from \"react\";\n\nexport class AddTodo extends Component {\n\n    state = {\n        title: ''\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({title: ''})\n    }\n    render() {\n        return (\n            <form onSubmit={ this.onSubmit } style={{display: 'flex' }}>\n                <input type=\"text\" name =\"title\"\n                       style = {{flex: '10', padding: '5px'}}\n                       placeholder=\"Add todo...\"\n                       // fires up that something needs to be changes when something is typed\n                       value = {this.state.title}\n                       onChange={this.onChange}/>\n                <input\n                 type=\"submit\"\n                value= \"Submit\"\n                className=\"btn\"\n                style={{flex: '1'}}/>\n            </form>\n        )\n    }\n}\n\nexport default AddTodo","import React from \"react\";\n\n\nfunction About() {\n\n    return (\n        <React.Fragment>\n            <h1>About</h1>\n            <p>This is the todo list app v1.0.0. Its part of react crash course</p>\n        </React.Fragment>\n    )\n}\n\nexport default About;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport Axios from \"axios\";\n\n// Basic application when created gives us this\nclass App extends Component {\n\n    // we have added states here, it just like passing json\n    state = {\n        todos: [\n        ]\n    }\n\n   componentDidMount() {\n\n        // Makes a https call to the json placeholder then sets the state usig {}\n        Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=2')\n            .then(res => this.setState({ todos: res.data}))\n   }\n\n\n    markComplete = (id) => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id == id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        })\n    }\n\n    deleteButtton = (id) => {\n        this.setState({todos: [...this.state.todos.filter(todo => todo.id != id)]})\n    }\n\n    addTodo = (title) => {\n      Axios.post('https://jsonplaceholder.typicode.com/todos', {\n          title,\n          completed: false\n      }).then(res => this.setState({todos: [...this.state.todos, res.data]}))\n\n    }\n\n    // render basically return backs the html page with proper css\n    render() {\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    <div className=\"container\">\n                        <Header/>\n\n                        {/*this route here is important as we are adding one route on this page if we will not add this it\n                           will then show the new page with this link so the route needs to be added with the tag exact path as [/]\n                           */}\n                        <Route exact path=\"/\" render={props => (\n                            <React.Fragment>\n                                <AddTodo addTodo={this.addTodo}/>\n                                {/*Passing whole object as json*/}\n                                {/*\n          passing the object(todos) as props\n          this will be retrived in the other component that is Todos\n\n          markComplete is being propped out from TodoItems --> todos --> App.js\n          over here we are calling markComplete method in which we can do the stuffs\n\n          So basically props can be used from here to next js page and vice-versa\n          */}\n                                <Todos todos={this.state.todos} markComplete={this.markComplete}\n                                       deleteButtton={this.deleteButtton}/>\n\n                            </React.Fragment>\n                        )}/>\n\n                        {/* This route over here is used to switch between the pages path = \"/About\" is the link to new page\n                        that means url will change to ..../about and the component to be loaded will be About. Note c in component\n                        in small*/}\n                        <Route path=\"/about\" component={About}/>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n\n}\n\n// this is very important as without this application will not work\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}